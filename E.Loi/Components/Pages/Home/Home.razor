@page "/home-law-id/{Id}" @inject ILogger<Home> _logger <PageTitle>الرئيسية</PageTitle>  <HeadContent>   
</HeadContent> @if (IsLoad) {     <div class="" style="margin-top:-22px !important;">         <Phases PhaseIds="@PhaseIds" EventTogglePhase="phase=>ChangePhaseLaw(phase)" />     </div>      <div class="container-fluid">     <div class="row mb-5">          @if (nodes.Count != 0)         {             <div class="col-md-4">                 <div class="overflow-y-auto" style="max-height: 85vh !important;">                                            <div class="card" style="margin-left:5px !important;">                         <div class="card-header position-relative py-3" style="background-color:#fff">                             <span class=""> مشروع القانون</span>                             <div class="position-absolute" style="left:10px;top:12px">                                   <div class="dropdown btn-group dropend">                               <button class="btn btn-sm dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">                               <i class="fa-solid fa-magnifying-glass"></i>                               </button>                               <div class="dropdown-menu drop-custom" style="">                                     <div class="px-2">                                         <input class="form-control" style="font-size:12px !important" placeholder="بحث في المشروع ..."   >                                         </div>                               </div>                             </div>                               </div/>                         </div>                         <div class="card-body">                             <ul class="tree-view list-unstyled">                                  <TreeView                                           Items="@nodes"                                           handleEventShowSubmitedAmendments="node=>Console.WriteLine()"                                           handleEventViewNodeContent="node=>getNodeContent(node.Id)"                                           handlePrintNodeContent="node => handlePrintNodeContent(node.Id)"                                           handleEventAddAmendment="node=>handle_AddAmendment(node.Id)"                                           handleEventDisplayAmendmentList="node=>handle_DisplayAmendmentList(node.Id)"                                           handleEventAddAmendmentConsensus="node=>{}"                                           handleEventAddAmendmentHarmonization="node=>{}"                                           handleVoteNode="_=>{}"                                           handleUploadAmendments="_=>handleUploadAmendments(_)"                                           handleEventDisplayAllAmendment="node=>DisplayAllAmendments(node.Id)"                                           handleEventShowAmendmentsSupplementary="Node=>{}"                                           handleEventAddAmendmentSupplementary="node=>HandleEventAddAmendmentSupplementary(node.Id)">                                 </TreeView>                             </ul>                          </div>                     </div>                 </div>             </div>         }         <div class="col-md-8">               @if (isPrintNodeContent)             {                 <div class="w-25 top-50 position-fixed" style="right:55%">                     <Loading />                 </div>             }              @if (stateContainerService.state!.ShowViewNodeContent && IsShow == false)             {                 <NodeContent content="@nodeContent" NodeId="@IdNode" />             }             @if (stateContainerService.state!.ShowViewListAmendments && IsShow == false)             {                 <AmendmentsList                      HandleEventEditAmendment="e=>EditAmendment(e.ToString())"                      amendmentId="@AmendmentId"                      NodeId="@IdNode"                      PhaseId="Guid.Parse(IdPhase)" />             }             @if (stateContainerService.state!.ShowAddAmendment && IsShow == false)             {                 <Amendments                      NodeId="@IdNode"                      AmendmentId="@AmendmentId"                      handleEventAddAmendment="@(_=>Console.WriteLine("amend Id =="+_))"                      handleCancelAddAmendment="_=>stateContainerService.state!.ShowAddAmendment=false"                   />             }             @if (IsShow)             {                 <UploadAmendment                      LawId="@IdLaw"                      PhaseId="@IdPhase"                      IsDisplay="@IsShow" />             }             @if (stateContainerService.state!.ShowViewAllAmendments && IsShow == false)             {                 <PublicAmendmentsList                      NodeId="@IdNode" />             }         </div>     </div>     </div> } else {     <div class="w-25 top-50 position-fixed" style="right:40%">         <Loading />     </div> }  