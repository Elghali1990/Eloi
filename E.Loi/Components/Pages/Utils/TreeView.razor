@inject ILogger<TreeView> _logger;

@if (Items != null)
{
    foreach (var item in Items)
    {
        <li class="position-relative "
            style="padding-right: @(Level * 16)px;padding-bottom:15px">
            @if (item.HasChildren)
            {
                <span class="arrow"
                      @onclick="() => item.IsCollapsed = !item.IsCollapsed"
                @onclick:stopPropagation>
                    <img style="width: 15px;height: 15px;margin-left: 10px; position: relative;top: -3px;" src="../images/@(item.IsCollapsed ? "chevron.png" : "chevron-dwon.png")" />
                </span>
            }
            else
            {
                <span class="arrow-placeholder">
                    <img style="width: 15px;height: 15px;margin-left: 10px; position: relative;top: 0;" src="../images/menu.png" />
                </span>
            }
            <span class="text item@(item.IsSelected ? " selected" : "")" style="padding-left:5px !important">
                @item.Label
            </span>
            <div class="dropdown position-absolute treview-btn" style="display:inline;top:-7px;left:0">
                <button class="btn  btn-sm dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                    <i class="fa-solid fa-gear"></i>
                </button>
                <ul class="dropdown-menu ">

                    <li><a class="dropdown-item " @onclick="()=>EventViewNodeContent(item)"><i class="fa-regular fa-file-lines ml-10"></i>الإطلاع  على محتوى العقدة</a></li>
                    @if (stateContainerService.user!.Roles!.Any(r => r.Name.Equals(_roleOptions.Value.MEMBER_GROUPE)) && stateContainerService.state!.HasRightAddAmendment)
                    {
                        <li><a class="dropdown-item " @onclick="()=>EventAddAmendment(item)"><i class="fa-regular fa-square-plus ml-10"></i> إضافة تعديل</a></li>
                    }
                    @if (stateContainerService.user!.Roles!.Any(r => r.Name.Equals(_roleOptions.Value.MEMBER_GROUPE)) && stateContainerService.state!.HasRightAddAmendmentSupplementary)
                    {
                        <li><a class="dropdown-item " @onclick="()=>EventAddAmendmentSupplementary(item)"><i class="fa-regular fa-square-plus ml-10"></i> إضافة تعديل خارج الأجل</a></li>
                    }

                    <li><a class="dropdown-item " @onclick="()=> EventPrintNodeContent(item)"><i class="fa-solid fa-print ml-10"></i> طباعة محتوى العقدة </a></li>
                    @if (stateContainerService.state!.ShowTeamAmendments)
                    {
                        <li>
                            <a class="dropdown-item " @onclick="()=>EventDisplayAmendmentList(item)">
                                <i class="fa-solid fa-eye ml-10"></i>
                                الإطلاع على تعديلات العقدة
                            </a>
                        </li>
                    }
                    @if (stateContainerService.user!.Roles!.Any(r => r.Name.Equals(_roleOptions.Value.MEMBER_GROUPE)) && stateContainerService.state!.HasRightUploadAmendments)
                    {
                        <li><a class="dropdown-item " @onclick="()=>EventhandleUploadAmendments()"><i class="fa-solid fa-arrow-up-from-bracket ml-10"></i>تشبت بالتعديلات</a></li>
                    }
                    @if (stateContainerService.state.HasRightShowViewListAmendments && stateContainerService.user.Roles!.Any(r => r.Name == _roleOptions.Value.MEMBER_GROUPE))
                    {
                        <li><a class="dropdown-item " @onclick="()=>EventDisplayAllAmendment(item)"><i class="fa-solid fa-bars-staggered ml-10"></i>الإطلاع  على جميع التعديلات </a></li>
                    }
                    @if (stateContainerService.user.Roles!.Any(r => r.Name != _roleOptions.Value.MEMBER_GROUPE))
                    {
                        if (stateContainerService.state.HasRightAddConsensusHarmonization)
                        {
                            <li><a class="dropdown-item " @onclick="()=>EventAddAmendmentConsensus(item)"><i class="fa-solid fa-file-pen ml-10"></i>إضافة صيغة توافقية على التعديل</a></li>
                            <li><a class="dropdown-item " @onclick="()=>EventAddAmendmentHarmonization(item)"><i class="fa-solid fa-file-circle-plus ml-10"></i>إضافة صيغة في إطار الملاءمة</a></li>
                            <li><a class="dropdown-item " @onclick="()=>EventShowSubmitedAmendments(item)"><i class="fa-regular fa-folder-open ml-10"></i>النعديلات المحالة</a></li>
                            @* <li><a class="dropdown-item " @onclick="()=>EventShowAmendmentsSupplementary(item)"><i class="fa-regular fa-folder-open ml-10"></i>النعديلات المستدركة المحالة</a></li> *@
                        }
                        if (stateContainerService.state.HasRightvoteAmendment)
                        {
                            <li>
                                <a class="dropdown-item " @onclick="()=>EventDisplayAmendmentList(item)">
                                    <i class="fa-regular fa-hand ml-10"></i>
                                    تصويت على تعديلات العقدة
                                </a>
                            </li>
                            <li>
                                <a class="dropdown-item " @onclick="()=>EventhandleVoteNode()">
                                    <i class="fa-regular fa-hand ml-10"></i>
                                    تصويت على المواد
                                </a>
                            </li>
                        }
                    }
                </ul>
            </div>
        </li>
        @if (item.HasChildren && !item.IsCollapsed)
        {
            <TreeView Items="@item.childrens"
                      Level="@(Level + 1)"
                      handlePrintNodeContent="EventPrintNodeContent"
                      handleEventShowSubmitedAmendments="EventShowSubmitedAmendments"
                      handleEventViewNodeContent="EventViewNodeContent"
                      handleEventDisplayAmendmentList="EventDisplayAmendmentList"
                      handleEventAddAmendment="EventAddAmendment"
                      handleEventDisplayAllAmendment="EventDisplayAllAmendment"
                      handleEventAddAmendmentConsensus="EventAddAmendmentConsensus"
                      handleEventAddAmendmentHarmonization="EventAddAmendmentHarmonization"
                      handleVoteNode="EventhandleVoteNode"
                      handleUploadAmendments="EventhandleUploadAmendments"
                      handleEventShowAmendmentsSupplementary="EventShowAmendmentsSupplementary"
                      handleEventAddAmendmentSupplementary="EventAddAmendmentSupplementary">
            </TreeView>
        }
    }
}


